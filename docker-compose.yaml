services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file: ./frontend/.env
    depends_on:
      - backend
      - auth
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:1.21-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - auth
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - GIN_MODE=release
    ports:
      - "8081:8081"
    networks:
      - my_network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - BIND_ADDRESS=0.0.0.0:5001
      - REDIS_ADDRESS=redis://redis:6379
    ports:
      - "5001:5001"
    depends_on:
      - redis
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - my_network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  my_network:
    name: custom_network

volumes:
  redis_data: