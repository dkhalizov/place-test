apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: traefik
  namespace: kube-system
spec:
  valuesContent: |-
    forwardedHeaders:
      trustedIPs:
        - 10.42.0.0/16
        - 172.16.0.0/12
        - 192.168.0.0/16
        - insecure: true
    ports:
      web:
        port: 8000
        expose: true
        exposedPort: 80
        protocol: TCP
      websecure:
        enabled: true
        port: 8443
        expose: true
        exposedPort: 443
        protocol: TCP

    service:
      spec:
        externalTrafficPolicy: Local
      enabled: true
      type: LoadBalancer
      annotations: {}
      ports:
        web:
          port: 80
          nodePort: 32269
          protocol: TCP
        websecure:
          port: 443
          protocol: TCP

    entryPoints:
      web:
        address: ":80"
      websecure:
        address: ":443"

    additionalArguments:
      - "--providers.kubernetesingress.ingressclass=traefik-internal"
      - "--log.level=ERROR"
      - "--entrypoints.web.proxyProtocol.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
      - "--entrypoints.websecure.proxyProtocol.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
      - "--entrypoints.web.forwardedHeaders.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
      - "--entrypoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"

    logs:
      access:
        enabled: false
        filters:
          filterPath:
            - "/ping"
            - "/metrics"
          filterRouterName:
            - "ping@internal"
            - "prometheus@internal"
        format: json
        fields:
          general:
            defaultMode: keep
            names:
              ClientUsername: drop
          headers:
            defaultMode: keep
    ingressRoute:
      dashboard:
        enabled: true

    deployment:
      enabled: true

    ingressClass:
      enabled: true
      isDefaultClass: true

    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesIngress:
        enabled: true
        publishedService:
          enabled: true
        allowExternalNameServices: true

    tls:
      stores:
        default:
          defaultCertificate:
            secretName: cloudflare-cert-tls

    dashboard:
      enabled: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: auth-route
  namespace: r-clone
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: Host(`grid.guliguli.work`) && PathPrefix(`/api/auth`)
      priority: 2
      services:
        - kind: Service
          name: auth
          port: 8080

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: frontend-route
  namespace: r-clone
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: Host(`grid.guliguli.work`) && PathPrefix(`/`)
      priority: 1
      services:
        - kind: Service
          name: frontend
          port: 3000
    - kind: Rule
      match: Host(`grid.guliguli.work`) && PathPrefix(`/config`)
      services:
        - kind: Service
          name: frontend
          port: 8080
---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: test-auth
  namespace: r-clone
spec:
  forwardAuth:
    address: http://auth.r-clone.svc.cluster.local:8080/api/auth/access
    trustForwardHeader: true
    authResponseHeaders:
      - X-Auth-User
    authRequestHeaders:
      - "Accept"
      - "Authorization"
    tls:
      insecureSkipVerify: true

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard
  namespace: kube-system
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`traefik.localhost`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: websocket-route
  namespace: r-clone
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: Host(`grid.guliguli.work`) && PathPrefix(`/ws`)
      services:
        - kind: Service
          name: ws
          port: 8080
#      middlewares:
#        - name: test-auth
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: draw-route
  namespace: r-clone
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: Host(`grid.guliguli.work`) && PathPrefix(`/api/draw`)
      services:
        - kind: Service
          name: draw
          port: 8080
#      middlewares:
#        - name: test-auth
